"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
"""

from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from loguru import logger

from bot.keyboards import get_settings_keyboard
from bot.states import SettingsStates
from database.operations import get_user_settings, update_user_settings


async def settings_handler(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /settings"""
    user = message.from_user
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = get_user_settings(user.id)
    
    text = "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞</b>\n\n"
    text += f"‚è± <b>Rate Limit:</b> {settings.get('rate_limit_delay', 2.0)} —Å–µ–∫\n"
    text += f"üîç <b>–ì–ª—É–±–∏–Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:</b> {settings.get('max_depth', 2)} —É—Ä–æ–≤–Ω–µ–π\n"
    text += f"üåê <b>JS —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥:</b> {'–í–∫–ª—é—á–µ–Ω' if settings.get('js_render_enabled', True) else '–û—Ç–∫–ª—é—á–µ–Ω'}\n"
    text += f"‚è∞ <b>–¢–∞–π–º–∞—É—Ç JS:</b> {settings.get('js_render_timeout', 30)} —Å–µ–∫\n"
    text += f"üéØ <b>Confidence threshold:</b> {settings.get('confidence_threshold', 0.6)}\n"
    text += f"‚è≥ <b>–û–±—â–∏–π —Ç–∞–π–º–∞—É—Ç:</b> {settings.get('parsing_timeout', 120)} —Å–µ–∫\n\n"
    text += "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
    
    await message.answer(
        text,
        reply_markup=get_settings_keyboard(),
        parse_mode="HTML"
    )


async def update_settings_handler(callback_query: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    user = callback_query.from_user
    action = callback_query.data.split('_')[1]
    
    if action == "rate_limit":
        await callback_query.message.edit_text(
            "‚è± <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Rate Limit</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (0.5 - 10.0):\n\n"
            "<b>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:</b>\n"
            "‚Ä¢ 1.0 - –±—ã—Å—Ç—Ä—ã–π –ø–∞—Ä—Å–∏–Ω–≥ (–º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)\n"
            "‚Ä¢ 2.0 - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å\n"
            "‚Ä¢ 5.0 - –º–µ–¥–ª–µ–Ω–Ω—ã–π, –Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥",
            parse_mode="HTML"
        )
        await state.set_state(SettingsStates.waiting_for_rate_limit)
        
    elif action == "depth":
        await callback_query.message.edit_text(
            "üîç <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª—É–±–∏–Ω—ã –ø–∞—Ä—Å–∏–Ω–≥–∞</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π –¥–ª—è –æ–±—Ö–æ–¥–∞ (1 - 5):\n\n"
            "<b>–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:</b>\n"
            "‚Ä¢ 1 - —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞\n"
            "‚Ä¢ 2 - —Å—Ç—Ä–∞–Ω–∏—Ü–∞ + –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏\n"
            "‚Ä¢ 3+ - –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–∏–π –æ–±—Ö–æ–¥\n\n"
            "<b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –ë–æ–ª—å—à–∞—è –≥–ª—É–±–∏–Ω–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –ø–∞—Ä—Å–∏–Ω–≥–∞",
            parse_mode="HTML"
        )
        await state.set_state(SettingsStates.waiting_for_depth)
        
    elif action == "js_render":
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º JS —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
        current_settings = get_user_settings(user.id)
        new_value = not current_settings.get('js_render_enabled', True)
        
        update_user_settings(user.id, {'js_render_enabled': new_value})
        
        await callback_query.answer(
            f"JS —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ {'–≤–∫–ª—é—á–µ–Ω' if new_value else '–æ—Ç–∫–ª—é—á–µ–Ω'}",
            show_alert=True
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await settings_handler(callback_query.message, state)
        
    elif action == "confidence":
        await callback_query.message.edit_text(
            "üéØ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Confidence Threshold</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏ (0.1 - 1.0):\n\n"
            "<b>–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:</b>\n"
            "‚Ä¢ 0.1 - –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏\n"
            "‚Ä¢ 0.5 - –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∑–∞–ø–∏—Å–∏ —Å—Ä–µ–¥–Ω–µ–π –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ 0.7 - –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏\n"
            "‚Ä¢ 0.9 - –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—á–µ–Ω—å –Ω–∞–¥–µ–∂–Ω—ã–µ –∑–∞–ø–∏—Å–∏",
            parse_mode="HTML"
        )
        await state.set_state(SettingsStates.waiting_for_confidence)
    
    await callback_query.answer()


async def handle_rate_limit_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ rate limit"""
    try:
        value = float(message.text.strip())
        
        if not (0.5 <= value <= 10.0):
            await message.answer(
                "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!\n\n"
                "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0.5 –¥–æ 10.0",
                parse_mode="HTML"
            )
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        update_user_settings(message.from_user.id, {'rate_limit_delay': value})
        
        await message.answer(
            f"‚úÖ Rate Limit —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {value} —Å–µ–∫",
            parse_mode="HTML"
        )
        
        await state.clear()
        
    except ValueError:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2.0)",
            parse_mode="HTML"
        )


async def handle_depth_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≥–ª—É–±–∏–Ω—ã –ø–∞—Ä—Å–∏–Ω–≥–∞"""
    try:
        value = int(message.text.strip())
        
        if not (1 <= value <= 5):
            await message.answer(
                "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!\n\n"
                "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5",
                parse_mode="HTML"
            )
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        update_user_settings(message.from_user.id, {'max_depth': value})
        
        await message.answer(
            f"‚úÖ –ì–ª—É–±–∏–Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {value} —É—Ä–æ–≤–Ω–µ–π",
            parse_mode="HTML"
        )
        
        await state.clear()
        
    except ValueError:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2)",
            parse_mode="HTML"
        )


async def handle_confidence_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ confidence threshold"""
    try:
        value = float(message.text.strip())
        
        if not (0.1 <= value <= 1.0):
            await message.answer(
                "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!\n\n"
                "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0.1 –¥–æ 1.0",
                parse_mode="HTML"
            )
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        update_user_settings(message.from_user.id, {'confidence_threshold': value})
        
        await message.answer(
            f"‚úÖ Confidence threshold —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {value}",
            parse_mode="HTML"
        )
        
        await state.clear()
        
    except ValueError:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 0.6)",
            parse_mode="HTML"
        )
